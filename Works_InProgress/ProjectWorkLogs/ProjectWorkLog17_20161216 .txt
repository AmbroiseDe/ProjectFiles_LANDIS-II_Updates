Title:				Project Work Log17
Project Description:		LANDIS-II upgrades/corrections
Project ID:			2016SoE021
Author:				bmarron
Origin Date:			16 Dec 2016
Revision Date:					


#########################################################################
Log:
LANDVIZ
#########################################################################


	a. charles email
Hello,

So from my recollection, I didn't tell LandViz 7.29 (as it isn't in the preproc .xml file).  
I think the only instance of it is actually in the landis scenario file (Scenario.txt) where there is an input for cell length.  
Cell length takes meter units, ours is 270, and a 270^2 sized cell is 7.29ha.  Landis does do that calculation internally, but it 
doesn't seem to care too much about the cell area.  From the original landis log:

2016-10-18 16:23:58,737 - LANDIS-II 6.1 (official release)
2016-10-18 16:23:58,769 -
2016-10-18 16:23:58,987 - Loading scenario from file "Scenario.txt" ...
2016-10-18 16:23:59,237 - Initialized random number generator with seed = 1,645,581,128
2016-10-18 16:23:59,253 - Loading species data from file "Species.txt" ...
2016-10-18 16:23:59,393 - Loading ecoregions from file "Ecoregions.txt" ...
2016-10-18 16:23:59,659 - Initializing landscape from ecoregions map "M_ESIMP_270M_simplified.asc" ...
2016-10-18 16:23:59,846 - Cell length = 270 m, cell area = 7.29 ha
2016-10-18 16:23:59,846 - Map dimensions: 1,197 rows by 602 columns = 720,594 cells
2016-10-18 16:23:59,971 - Sites: 402,769 active (55.9 %), 317,825 inactive (44.1 %)

The cell area does get carried over into the landis .xml metadata, which is what landviz reads.

And that's really about all I know.  Let me know if you have any other questions.

Thanks (and good luck),
charles



	b. track screen ouput sequence to its source in <module>.py
	b1. "Start LANDIS-II PreProcTool"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Start LANDIS-II PreProcTool"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/main.py:76:        logMain.info('Start LANDIS-II PreProcTool')


	b2. "Setup application configuration"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Setup application configuration"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/l2utils/collector.py:132:   logSetupConfig.info('Setup application configuration')


	b3. "Create Project"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Create Project"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/l2utils/collector.py:17:            logCreateProject.info('Create Project')



	b4. "Project name:"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Project name:"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/l2utils/collector.py:36:    logCreateProject.info('Project name: "{}"'.format(self.PROJECT.projectName))



	b5. "Load spatial refrence and geo extent from the project xml file"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Load spatial refrence and geo extent from the project xml file"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/l2utils/collector.py:98:      logLoadSRS.info('Load spatial refrence and geo extent from the project xml file')




	b6. "Load Map Preferences form project xml file"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Load Map Preferences form project xml file"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/l2utils/collector.py:56:       logLoadMapPrefs.info('Load Map Preferences form project xml file')



	b7. "Load Datastructure from Lanids Metadata"
$ grep -rn ~/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/ --include="*.py" -e "Load Datastructure from Lanids Metadata"
/home/bmarron/Desktop/LANDVIZ_20161213/LANDVIZ/PreProcTool/source/l2utils/collector.py:178:            logLoadDataStruct.info('Load Datastructure from Lanids Metadata')
	




