#	Title: 		LANDIS-II Updates and Corrections Project -- InProgress
#	Project:	2016SoE021_LANDIS_Upgrades	
#	Author:		bmarron
#	Origin Date:	06 Sept 2016
#	Revision Date:	12 Sept 2016		




####################################	*syntax ==> project <your_project_id> "Your Project Title" start - end {}
###	[[project header]]	####	*includes some globals
####################################

project tj_2016SoE021 "Programming Updates for LANDIS-II" 2016-09-05 - 2017-05-05 {
	timezone "America/Vancouver"
	currency "USD"
	currencyformat "(" ")" "," "." 2
	dailyworkinghours 3
}

# wk1	= start 2016-09-05
# wk2	= start 2016-09-12
# wk3	= start 2016-09-19
# wk4	= start 2016-09-26
# ......


############################	*Define subsets w/ flags that can be filtered from reports
####	[[flags]]	#### 	*Every container task level assigned a flag
############################

#	flag1	= Management Tasks
#	flag2	= Programming and Training Tasks
#	flag3	= Milestone Tasks
#	flag4	= <open>

flags flag1,
      flag2,
      flag3,
      flag4

############################	*syntax ==> account <your_account_id> "Your Acct Name"
####	[[accounts]]	#### 	*global accounts: (1)account cost "Your Acct Name", (2)account rev "Your Acct Name"			
############################	*ids must be unique within their property class	
		
account ProjectCost "Total Costs" {
  account Developer1 "Student1"
  account Developer2 "Student2"
  account Developer3 "Student3"
  account Manager1 "Marron" 
}

account ProjectFunding "Total Funding"{
credits ${projectstart} "USFS Grant1" 50000
}
				#MUST set a balance calc even if no revenue is being tracked
balance ProjectCost ProjectFunding


####################################	*The expected default daily rate for ALL resources; global
####	[[defaultrate]]		#### 	*This can be overridden for each resource
####################################	*MUST be set to get 'cost' into taskreports

rate 60.00				#the default DAILY (here, 3h) cost of a resource
					# 3h*$20/h = $60/d


############################	*syntax ==> resource <your_resource_id> "Your Resource Name"
####	[[resources]]	#### 	*ids must be unique within their property class
############################	*An effort of 6d (6 resource-days) can be done with 2 full-time resources in 3 working days
############################	*see workinghours(project) for global settings; workinghours(resource) for local settings
############################	*to override default rate MUST define new rate at the individ resource level (not team level)
############################	*billing rate $75/hr*3hr/day = 225; pay rate $70/hr
############################	*#billing rate $50/hr*3hr/day; pay rate $45/hr


					#need 'resource clones' if same person works on multiple projects during a single week
					#o/w TJ will not pick up all worked hours for accounting

#---- Manager ------------------------------------------
resource bmarron1 "Bruce Marron" {
}

resource bmarron2 "Bruce Marron" {
}

resource bmarron3 "Bruce Marron" {
}

resource bmarron4 "Bruce Marron" {
}

resource bmarron5 "Bruce Marron" {
}

# ------------Developer A ---------------------------------------							
resource devA1 "Student1" {
}

resource devA2 "Student1" {
}

resource devA3 "Student1" {
}

resource devA4 "Student1" {
}

resource devA5 "Student1" {
}


# ------------Developer B ---------------------------------------							
resource devB1 "Student2" {
}

resource devB2 "Student2" {
}

resource devB3 "Student2" {
}

resource devB4 "Student2" {
}

resource devB5 "Student2" {
}							


# ------------Developer C ---------------------------------------							
resource devC1 "Student2" {
}

resource devC2 "Student2" {
}

resource devC3 "Student2" {
}

resource devC4 "Student2" {
}

resource devC5 "Student2" {
}	



############################	*syntax ==> task <your_task_id> "Your Task Name"
####	[[tasks]]   ########	*unlike all other properties, tasks have a hierarchical id name space ==> can repeated subtask codes!
############################	*attributes: allocate, effort/length/duration, complete, depends, start, end
#				*watch start/end dates!!
#				*watch effort!! Only one value allowed per task
#				*Container level tasks cannot have any 'effort'
#				*syntax ==> allocate team5, team6
#				*'effort' partitioned equally: a team of 5 people can only be assigned en block; ALL work

##============= Management (ADM) =================================================================

#	ManagementTask#		= MT#

#	MT1	= Management Structure
#	MT2	= Recruitment
#	MT3	= Trainings
#	MT4	= Project Management

						#Tier_1.0.0.0 (container level task)
task mngmnt "PROJECT MANAGEMENT" {
 flags flag1
 chargeset Manager1
						#Tier_1.1.0.0 
task MT1 "Management Structure" {		
						#Tier_1.1.1.0
 task wk1a "Develop Task/Cost Accounting"{
  start 2016-09-05
  allocate bmarron1
  length 11h
 }

 task wk1b "Develop Workflow Accounting"{
  start 2016-09-05
  allocate bmarron2
  length 2h
 }

 task wk1c "Develop GitHub/Project Tracking Interface"{
  start 2016-09-05
  allocate bmarron3
  length 2h
 }

 task wk2a "Develop Workflow Algorithm"{
  start 2016-09-12
  allocate bmarron1
  length 5h 
 }

 task wk2b "git and GitHub Setup"{
  start 2016-09-12
  allocate bmarron2
  length 4h
 }

  task wk3a "git and GitHub Setup"{
  start 2016-09-19
  allocate bmarron1
  length 2h
 }

}


						#Tier_1.2.0.0
task MT2 "Recruitment" {		
						#Tier_1.2.1.0
 task wk2a "Draft Developers Job Description"{
  start 2016-09-12
  allocate bmarron3
  length 3h 
 }

 task wk3a "Job Postings/Notifications"{
  start 2016-09-19
  allocate bmarron2
  length 2h 
 }
}


						#Tier_1.3.0.0.0
task MT3 "Trainings" {		
						#Tier_1.3.1.0
# task wk6a "Kickoff Mtg"{
#  start 2016-10-10
#  allocate bmarron1
#  length 2h
# }
}
}


##============= Programming =======================================================================

#	OverHead#	= OV#

#	OV1	= Basic Trainings
#	OV2	= LANDIS Trainings
#	OV3	= Status Mtgs


#----------- Overhead ---------------------------------------------------------------------------------

						#Tier_1.0.0.0 (container task level)
task overhead "PROJECT OVERHEAD" {
  flags flag2							
						#Tier_1.1.0.0
task OV1 "Basic Trainings" {
						#Tier_1.1.1.0
						# wk6 starts 2016-10-10; wk6 has had three separate task tickets (a,b,c) arrive; 
						#each of the three student programmers has allocated resources to a task ticket; 
						#the task tickets are all for the same task ("Kickoff Mtg")
						#  
# task wk6a "Kickoff Mtg"{
#  start 2016-10-10
#  chargeset Developer1
#  allocate devA1
#  length 2h
# }

# task wk6b "Kickoff Mtg"{
#  start 2016-10-10
#  chargeset Developer2
#  allocate devB1
#  length 2h
# }

# task wk6c "Kickoff Mtg"{
#  start 2016-10-10
#  chargeset Developer3
#  allocate devC1
#  length 2h
# }
}

						#Tier_1.2.0.0
task OV2 "LANDIS Trainings" {
						#Tier_1.2.1.0		
# task wk7a "LANDIS Training1"{
#  start 2016-10-17
#  chargeset Developer1
#  allocate devA1
#  length 2h 
# }

# task wk7b "LANDIS Training1"{
#  start 2016-10-17
#  chargeset Developer2
#  allocate devB1
#  length 2h 
# }

# task wk7c "LANDIS Training1"{
#  start 2016-10-17
#  chargeset Developer3
#  allocate devC1
#  length 2h 
# }
}

						#Tier_1.3.0.0
task OV3 "Status Mtgs" {
						#Tier_1.3.1.0
# task wk9a "Status Meeting1"{
#  start 2016-10-31
#  chargeset Developer1
#  allocate devA1
#  length 1h 
# }

# task wk9b "Status Meeting1"{
#  start 2016-10-31
#  chargeset Developer2
#  allocate devB1
#  length 1h 
# }

# task wk9c "Status Meeting1"{
# start 2016-10-31
#  chargeset Developer3
#  allocate devC1
#  length 1h 
# }
}
}


#--------- GitHub Branch Issues -------------------------------------------------------------------

#	GitHubBranch	= GHB#

#	GHB1 =	Extension-NECN-Sucession
#	GHB2 = 	Library-Climate
#	GHB3 = 	Extensions-Succession
#	GHB5 =	Tool-L2-Site
#	GHB6 = 	Extension-Biomass_Exten
#	GHB11= 	Core-Model
#	GHB27 =	Extension-Biomass_Harvest
#	GHB30=	Tools
#	GHB36 =	LANDVIZ-Development


						#Tier_2.0.0.0 (container task level)
task issuesets "PROJECT GitHub BRANCH ISSUES"{
  flags flag2
						#Tier_2.1.0.0						
task GHB11 "Core-Model" {
						#Tier_2.1.1.0
# task wk7a "task1"{
#  start 2016-10-17
#  chargeset Developer1
#  allocate devA1
#  length 10h
# }

# task wk7b "task1"{
#  start 2016-10-17
#  chargeset Developer2
#  allocate devB1
#  length 12h
#  complete 75
# }

# task wk7c "task3"{
#  start 2016-10-17
#  chargeset Developer3
#  allocate devC1
#  length 15h
#  complete 50
# }
						#Tier_2.1.2.0
# task wk8a "task2"{
#  start 2016-10-24
#  chargeset Developer1
#  allocate devA1
#  length 11h
#  complete 35
# }

# task wk8b "task1"{
#  start 2016-10-24
#  chargeset Developer2
#  allocate devB1
#  length 9h
#  complete 100
# }

# task wk8c "task3"{
#  start 2016-10-24
#  chargeset Developer3
#  allocate devC1
#  length 10h
#  complete 100
# }

# task wk8d "task4"{
#  start 2016-10-24
#  chargeset Developer3
#  allocate devC2
#  length 3h
#  complete 15
# }

}
}


############################	*syntax ==> task <your_milestone_id> "Your Milestone Name"
####	[[milestones]]	#### 	*ids must be unique within their property class
############################	*attributes: end (cannot have 'effort' values here!!)

#	Milestones#	= MST#
#
#	MST1	= Project-Level Milestones
#	MST2	= IssueSet-Level Milestones 
 
							#Tier_1.0.0.0 (container task level)
task MST1 "Project Milestones"{
 flags flag3
							#Tier_1.1.0.0 									
  task m1 "Management Structure Completed"{
   end 2016-09-16   
  }

  task m2 "git and GitHub Workflows Designed"{
   end 2016-09-30   
  }
											
  task m3 "Recruitment and Hiring Completed"{
   end 2016-09-30
  }

  task m4 "First-Round of Trainings Completed"{
   end 2016-10-07
  }

   task m5 "First Week of Tasks Billed by Programming Team"{
   end 2016-10-14
  }
}



############################	
####	[[task reports]] #### 	
############################	


## ----- initial setup for report generation --------------------------------------------------
navigator navbar {
  hidereport @none
 }

#--- textreports: layout for taskreports -----------------------------------------------------------------------

									# Add header to printout
textreport frame1 "report title name" {
	header -8<-
	== Project: LANDIS-II Updates and Corrections ==  				
	->8-

	footer "----"
									# Specific reports to be included in printout
									# textreport status1 "name of the .html file"
textreport status1 "LANDIS_Project_Status" {
	formats html
    	center -8<-
      	<[report id="gantt1"]>
      	----
      	<[report id="gantt2"]>
      	----
      	<[report id="acct1"]>
 	->8-
  }
}


#--- taskreports: to be included in textreport -------------------------------------------------------------------

taskreport gantt1 "Project Status" {
	header -8<-
	== Task Status as of ${today} ==
	->8-
	footer "----"
	
	hidetask (flag3 | flag4)

	columns 
	  name,
	  start,
#          end,
          chart
}

taskreport gantt2 "Milestones" {
	header -8<-
	== Expected Milestones as of ${today} ==
	->8-
	footer "----"

	hidetask (flag1 | flag2)

	columns 
	  name,
          end,
          chart
}



#######################################
##### [[account reports]]  ############
#######################################


accountreport acct1 "ProfitandLoss" {
	header -8<-
	== Accounting Status as of ${today} ==
	->8-
	footer "----"
  
  columns 
	no, 
	name, 
	weekly
}



